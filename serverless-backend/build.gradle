apply plugin: 'java'
apply plugin: 'maven'

group = 'com.medhelper'
version = 'dev'

description = """medhelper api"""


sourceCompatibility = 1.5
targetCompatibility = 1.5
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.0"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
        classpath "de.sebastianboegl.gradle.plugins:shadow-log4j-transformer:2.1.1"
    }
}

apply plugin: 'kotlin'
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "de.sebastianboegl.shadow.transformer.log4j"

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile(
            'org.jetbrains.kotlin:kotlin-stdlib:1.3.0',
            'org.jetbrains.kotlin:kotlin-reflect:1.3.0',
            'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1',
            'com.sparkjava:spark-core:2.5.4',
            'org.jetbrains.kotlin:kotlin-script-runtime:1.3.0',
            'com.amazonaws:aws-lambda-java-log4j2:1.0.0',
            'com.amazonaws:aws-lambda-java-core:1.1.0',
            'com.amazonaws:aws-lambda-java-events:2.0.1',
            'com.fasterxml.jackson.core:jackson-core:2.8.5',
            'com.fasterxml.jackson.core:jackson-databind:2.8.5',
            'com.fasterxml.jackson.core:jackson-annotations:2.8.5',
            'com.expedia:graphql-kotlin:0.2.8',
            'io.projectreactor:reactor-core:3.2.6.RELEASE'
    )

    testCompile(
            "org.assertj:assertj-core:3.11.1",
            "org.junit.jupiter:junit-jupiter-api:5.2.0",
            "org.junit.jupiter:junit-jupiter-params:5.2.0",
            'com.willowtreeapps.assertk:assertk:0.10'
    )

    testImplementation(
            'io.kotlintest:kotlintest-runner-junit5:3.3.2',
            "io.mockk:mockk:1.9.3"
    )

    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.2.0"
}

test{
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    dependsOn 'cleanTest'

}

sourceSets {
    main {
        kotlin.srcDirs = ['src/main/kotlin']
    }
    test {
        kotlin.srcDirs = ['src/test/kotlin']
    }
}

task deploy(type: Exec, dependsOn: 'shadowJar') {
    commandLine 'serverless', 'deploy'
}

task deployStaging(type: Exec, dependsOn: 'shadowJar') {
    commandLine 'serverless', 'deploy', '--stage', 'staging'
}

task deployProd(type: Exec, dependsOn: 'shadowJar') {
    commandLine 'serverless', 'deploy', '--stage', 'production'
}
